@model JobsAbility.Models.JobPostings
@{
    ViewData["Title"] = "CreateJobs";
    var categories = (List<SelectListItem>)(ViewBag.categories);
}

<div class="page-header">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="inner-header">
                    <h3>Post A Job</h3>
                </div>
            </div>
        </div>
    </div>
</div>
<section class="section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-9 col-md-12 col-xs-12">
                <div class="post-job box">
                    <h3 class="job-title">Post a new Job</h3>
                    @using (Html.BeginForm("CreateJobs","home",FormMethod.Post,new { @class="form-ad" })) {
                        <div class="form-group">
                            <label class="control-label">Job Title</label>
                            @Html.TextBoxFor(a => a.Title, new { @class = "form-control", placeholder = "Write job title" })
                        </div>
                        <div class="form-group">
                            <label class="control-label">Disability Targeted</label>
                            <div>
                                <label>@Html.CheckBoxFor(a => a.IsDeaf, new { }) For Deaf</label>
                            </div>
                            <div>
                                <label>@Html.CheckBoxFor(a => a.IsBlind, new {}) For Low Vision</label>
                            </div>
                            <div>
                                <label>@Html.CheckBoxFor(a => a.IsAll, new { }) For Other Disabilites</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Category</label>
                            <div class="search-category-container">
                                <label class="styled-select">
                                    @Html.DropDownListFor(a => a.CategoryId,categories, new { @class = "dropdown-product selectpicker" })
                                </label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label noMarginBottom">Description</label>
                        </div>
                        @Html.HiddenFor(a=>a.Details,new { id="details"})
                        @Html.HiddenFor(a=>a.DetailsText,new { id="detailsText"})
                        <textarea name="editor1"></textarea>
                        <script>
                            CKEDITOR.replace("editor1");
                        </script>
                        <div class="divider"></div>
                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-common">Submit your job</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts{ 
    <script>
        CKEDITOR.instances.editor1.on('change', function () {
            $("#details").val(CKEDITOR.instances.editor1.getData());
            var text = getClearText(CKEDITOR.instances.editor1.getData());
            $("#detailsText").val(text);
        });
        function getClearText(strSrc) {
            return strSrc.replace(/<[^<|>]+?>/gi, '');
        }
    </script>
}